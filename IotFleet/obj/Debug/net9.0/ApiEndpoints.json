[
  {
    "ContainingType": "IotFleet.Controllers.DashboardController",
    "Method": "GetFuelConsumptionStats",
    "RelativePath": "api/Dashboard/fuel-consumption",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.DashboardController",
    "Method": "GetRecentSensorData",
    "RelativePath": "api/Dashboard/recent-sensor-data",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "limit",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.DashboardController",
    "Method": "GetStatistics",
    "RelativePath": "api/Dashboard/statistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.DashboardController",
    "Method": "GetVehicleStatus",
    "RelativePath": "api/Dashboard/vehicle-status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.HealthController",
    "Method": "GetHealth",
    "RelativePath": "api/Health",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.HealthController",
    "Method": "GetDatabaseHealth",
    "RelativePath": "api/Health/database",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.HealthController",
    "Method": "GetDetailedHealth",
    "RelativePath": "api/Health/detailed",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.User.Command.LoginCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.SensorDataController",
    "Method": "GetSensorData",
    "RelativePath": "api/SensorData",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.SensorDataController",
    "Method": "CreateSensorData",
    "RelativePath": "api/SensorData",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sensorData",
        "Type": "Application.Features.SensorData.Command.IngestSensorDataCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.SensorDataController",
    "Method": "GetSensorDataById",
    "RelativePath": "api/SensorData/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.SensorDataController",
    "Method": "UpdateSensorData",
    "RelativePath": "api/SensorData/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "sensorData",
        "Type": "Application.Features.SensorData.Command.UpdateSensorDataCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.SensorDataController",
    "Method": "DeleteSensorData",
    "RelativePath": "api/SensorData/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "PostUser",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Application.Features.User.Command.UserCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "GetUser",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "PutUser",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "Application.Features.User.Command.UserUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "ChangePassword",
    "RelativePath": "api/Users/{id}/ChangePassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "passwordCommand",
        "Type": "Application.Features.User.Command.ChangePasswordCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.UsersController",
    "Method": "GetUserScreenPermissions",
    "RelativePath": "api/Users/{id}/Permissions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "GetVehicles",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "CreateVehicle",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicle",
        "Type": "Application.Features.Vehicle.Command.CreateVehicleCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "GetVehicle",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "UpdateVehicle",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "vehicle",
        "Type": "Application.Features.Vehicle.Command.UpdateVehicleCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "DeleteVehicle",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "GetVehiclesByFleet",
    "RelativePath": "api/Vehicle/fleet/{fleetId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fleetId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.VehicleController",
    "Method": "GetVehicleByLicensePlate",
    "RelativePath": "api/Vehicle/license-plate/{licensePlate}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "licensePlate",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IotFleet.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IotFleet.WeatherForecast, IotFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]